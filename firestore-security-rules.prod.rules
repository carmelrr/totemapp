// Firestore Security Rules - PRODUCTION MODE
// כללי אבטחה מקפידים לסביבת ייצור

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection - מותר לקרוא ולכתוב רק למשתמש עצמו או אדמין
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();
    }

    // Routes collection - מותר לכל אחד לקרוא, רק המחבר יכול לערוך
    match /routes/{routeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                       request.auth.uid == resource.data.createdBy;
      allow update, delete: if isAuthenticated() && 
                             (request.auth.uid == resource.data.createdBy || isAdmin());
    }

    // Feedbacks collection - מותר לכל אחד לקרוא ולכתוב
    match /feedbacks/{feedbackId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                       request.auth.uid == resource.data.userId;
      allow update, delete: if isAuthenticated() && 
                             (request.auth.uid == resource.data.userId || isAdmin());
    }

    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
