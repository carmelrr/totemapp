# Climbing Gym App

A React Native mobile app for climbing gym management with user authentication.

## Prerequisites

Before you start, make sure you have the following installed on your computer:

### 1. Node.js and npm
- Download and install Node.js from [https://nodejs.org/](https://nodejs.org/)
- This will also install npm (Node Package Manager)
- Verify installation by running in terminal:
  ```bash
  node --version
  npm --version
  ```

### 2. Git
- Download and install Git from [https://git-scm.com/](https://git-scm.com/)
- Verify installation:
  ```bash
  git --version
  ```
  git add .
  ```
  git commit -m "sometext"
  ```

### 3. Expo CLI
- Install Expo CLI globally:
  ```bash
  npm install -g @expo/cli
  ```

### 4. Expo Go App (for testing)
- Download "Expo Go" from your phone's app store
- Available for both iOS and Android

## Setup Instructions

### 1. Clone the Repository
```bash
git clone <your-repository-url>
cd climbing-gym-app
```

### 2. Install Dependencies
```bash
npm install
```

### 3. Firebase Setup

#### Create a Firebase Project:
1. Go to [https://console.firebase.google.com/](https://console.firebase.google.com/)
2. Click "Create a project"
3. Follow the setup wizard
4. Enable Authentication:
   - Go to "Authentication" ‚Üí "Sign-in method"
   - Enable "Email/Password"

#### Get Firebase Configuration:
1. In your Firebase project, click the gear icon ‚Üí "Project settings"
2. Scroll down to "Your apps" section
3. Click "Add app" ‚Üí Web app icon
4. Register your app with a name
5. Copy the Firebase configuration object

#### Configure the App:
1. Create a file called `firebase-config.js` in the project root
2. Add your Firebase configuration:

```javascript
import { initializeApp } from 'firebase/app';
import { getReactNativePersistence, initializeAuth } from 'firebase/auth';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { getFirestore } from 'firebase/firestore';
import { getStorage } from 'firebase/storage';
import { getAnalytics } from 'firebase/analytics';

const firebaseConfig = {
  apiKey: "your-api-key",
  authDomain: "your-project.firebaseapp.com",
  projectId: "your-project-id",
  storageBucket: "your-project.firebasestorage.app",
  messagingSenderId: "your-sender-id",
  appId: "your-app-id",
  measurementId: "your-measurement-id"
};

const app = initializeApp(firebaseConfig);

const auth = initializeAuth(app, {
  persistence: getReactNativePersistence(AsyncStorage),
});

const db = getFirestore(app);
const storage = getStorage(app);
const analytics = getAnalytics(app);

export { auth, db, storage, analytics };
```

**Important:** Replace all the "your-*" values with your actual Firebase configuration values.

#### Setup Firestore Security Rules:
1. Go to your Firebase Console ‚Üí Firestore Database ‚Üí Rules
2. Copy the content from `firestore-security-rules.rules` file
3. Paste it in the Firebase Console rules editor
4. Click "Publish"

#### Setup Storage Security Rules:
1. Go to your Firebase Console ‚Üí Storage ‚Üí Rules
2. Copy the content from `storage-security-rules.rules` file
3. Paste it in the Firebase Console rules editor
4. Click "Publish"

#### Setup Admin Access (Optional):
To enable admin features, create a document in Firestore:
- Collection: `admin`
- Document ID: `admins`
- Field: `userIds` (array) - Add the UIDs of users who should have admin access

#### Enable Required Firebase Services:
1. **Authentication**: Go to Authentication ‚Üí Sign-in method ‚Üí Enable "Email/Password"
2. **Firestore**: Go to Firestore Database ‚Üí Create database (start in test mode, then apply security rules)
3. **Storage**: Go to Storage ‚Üí Get started (start in test mode, then apply security rules)
4. **Analytics** (Optional): Go to Analytics ‚Üí Enable Google Analytics

### 4. Run the App

#### Start the Development Server:
```bash
npx expo start
```

#### Test on Your Phone:
1. Open the Expo Go app on your phone
2. Scan the QR code that appears in your terminal
3. The app will load on your phone

#### Test on Simulator (Optional):
- For iOS: Press `i` in the terminal (requires Xcode)
- For Android: Press `a` in the terminal (requires Android Studio)

## Project Structure

```
climbing-gym-app/
‚îú‚îÄ‚îÄ App.js                 # Main app component
‚îú‚îÄ‚îÄ firebase-config.js     # Firebase configuration (you'll create this)
‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îú‚îÄ‚îÄ LoginScreen.js     # Login screen component
‚îÇ   ‚îî‚îÄ‚îÄ HomeScreen.js      # Home screen after login
‚îú‚îÄ‚îÄ package.json           # Project dependencies
‚îú‚îÄ‚îÄ app.json              # Expo configuration
‚îî‚îÄ‚îÄ README.md             # This file
```

## Troubleshooting

### Common Issues:

**1. "expo command not found"**
- Run: `npm install -g @expo/cli`

**2. "Firebase not configured"**
- Make sure you created `firebase-config.js` with your actual Firebase keys

**3. "Network error"**
- Check your internet connection
- Make sure Firebase project is active

**4. App crashes on authentication**
- Verify Firebase Authentication is enabled in your Firebase console
- Check that Email/Password provider is enabled

### Getting Help:

- Expo Documentation: [https://docs.expo.dev/](https://docs.expo.dev/)
- Firebase Documentation: [https://firebase.google.com/docs](https://firebase.google.com/docs)
- React Native Documentation: [https://reactnative.dev/](https://reactnative.dev/)

## Next Steps

Once you have the basic login working:
1. Add user registration functionality
2. Create screens for gym features (class booking, route info, etc.)
3. Add navigation between screens
4. Implement user profiles and gym-specific features

## Development Tips

- Use `console.log()` to debug issues
- Check the Expo Go app for error messages
- Test on both iOS and Android if possible
- Keep your Firebase keys secure and never commit them to public repositories

Good luck with your climbing gym app! üßó‚Äç‚ôÇÔ∏è